name: Media Journal CI/CD

on:
  push:
    branches:
      - main
    
jobs:

  build:
    name: Build, verify, and publish artifacts

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
      
      - name: Install tools
        run: |
          dotnet tool install dotnet-ef --local --create-manifest-if-needed

      - name: Restore dependencies
        run: dotnet restore

      - uses: ./.github/actions/build-media-journal
        with:
          solutionRoot: ${{ github.workspace }}
          outputDirectory: ${{ env.DOTNET_ROOT }}/mj-webapp

  deploy_infra_staging:
    name: "Update Infrastructure in Staging"
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    needs: 
      - build
    environment:
      name: 'Staging'
    outputs:
      webAppName: ${{ steps.deploy-infrastructure.outputs.webAppName }}
      appSubnetId: ${{ steps.deploy-infrastructure.outputs.appSubnetId }}
    steps:
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Download infrastructure artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: mj-webapp-infrastructure

      - name: Deploy Bicep file
        id: deploy-infrastructure
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ vars.TARGET_RESOURCE_GROUP }}
          template: main.incremental.bicep
          parameters: >-
            envName=staging
            appNamePrefix=sp-mj
            vnetResourceGroupName=${{ vars.VNET_RESOURCE_GROUP }}
            vnetName=${{ vars.VNET_NAME }}
            subnetName=${{ vars.SUBNET_NAME }}
          failOnStdErr: false

  deploy_app_staging:
    name: "Deploy Application to Staging"
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    needs: 
      - deploy_infra_staging
    environment:
      name: 'Staging'
    steps:
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: mj-webapp

      - name: Make bundle executable
        run: chmod +x ./efbundle.exe

      - name: Migrate Application Database
        run: ./efbundle.exe --connection-string ${{ secrets.APP_DB_CONNECTION_STRING }}

      - name: Deploy to Azure Web App
        id: deploy-webapp
        uses: azure/webapps-deploy@v2
        with:
          resource-group-name: '${{ vars.TARGET_RESOURCE_GROUP }}'
          app-name: ${{ needs.deploy_infra_staging.outputs.webAppName }}
          # Note: Free/basic tiers only support "production" slot deployment, so the 
          # env var does value does not necessarily match theGitHub Actions Env name
          slot-name: '${{ vars.APP_SERVICES_DEPLOYMENT_SLOT }}' 
          package: .
