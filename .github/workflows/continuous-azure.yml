# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Media Journal CI/CD Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - feature/*
    
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.x'

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload app artifact(s)
        uses: actions/upload-artifact@v3
        with:
          name: myapp
          path: ${{env.DOTNET_ROOT}}/myapp

      - name: Upload infrastructure artifact(s)
        uses: actions/upload-artifact@v3
        with:
          name: infra
          path: ./infrastructure/azure


  deploy_infra_dev:
    if: (github.event_name == 'push' && startsWith(github.ref, 'refs/heads/feature/'))
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Dev'
    permissions:
      id-token: write
    outputs:
      webAppName: ${{ steps.deploy-infrastructure.outputs.webAppName }}
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Download infrastructure artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: infra
      
      - name: Deploy Bicep file
        id: deploy-infrastructure
        uses: azure/arm-deploy@v1
        with:
          scope: resourcegroup
          resourceGroupName: 'rg-sp-mj-nonprod'
          template: ./webapp.limited-workload.bicep
          parameters: 'environment=dev'
          failOnStdErr: false


  deploy_app_dev:
    if: (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev') || (github.event_name == 'push' && startsWith(github.ref, 'refs/heads/feature/'))
    runs-on: ubuntu-latest
    needs: deploy_infra_dev
    environment:
      name: 'Dev'
      url: ${{ steps.deploy-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: myapp
      
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Web App
        id: deploy-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ needs.deploy_infra_dev.outputs.webAppName }}
          slot-name: 'Production'
          package: .

  # deploy_staging:
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   needs: 
  #     - build
  #   environment:
  #     name: 'Staging'
  #   steps:
  #     - name: Download artifact from build job
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: myapp

  #     - name: Download infrastructure artifact from build job
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: infra
          
  #     - name: Login to Azure
  #       uses: azure/login@v1
  #       with:
  #         client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #         tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #         subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  #     - name: Deploy Bicep file
  #       id: deploy-infrastructure
  #       uses: azure/arm-deploy@v1
  #       with:
  #         scope: 'rg-sp-mj-nonprod'
  #         template: ./infra/webapp.production-workload.bicep
  #         parameters: '{ "environment": "staging" }'
  #         failOnStdErr: false

  #     - name: Deploy to Azure Web App
  #       id: deploy-webapp
  #       uses: azure/webapps-deploy@v2
  #       with:
  #         app-name: ${{ steps.deploy-infrastructure.outputs.webAppName }}
  #         slot-name: 'Production' # Free tier only supports production slot deployment
  #         package: .
