# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Media Journal CI/CD Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - feature/*
    
jobs:

  integrate:
    name: Integrate (Build)
    # @todo: Add unit tests
    # @todo: Add infrastructure verification and infrastructure artifact generation

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.x'

      - name: dotnet build
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload app artifact(s)
        uses: actions/upload-artifact@v3
        with:
          name: myapp
          path: ${{env.DOTNET_ROOT}}/myapp

      - name: Upload infrastructure declarations as artifact
        uses: actions/upload-artifact@v3
        with:
          name: infra
          path: ./infrastructure/azure


  deploy_infra_dev:
    name: "Deploy Infrastructure (Dev)"
    if: (github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    needs: integrate
    environment:
      name: 'Dev'
    outputs:
      webAppName: ${{ steps.deploy-infrastructure.outputs.webAppName }}
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Download infrastructure artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: infra
      
      - name: Deploy Bicep file
        id: deploy-infrastructure
        uses: azure/arm-deploy@v1
        with:
          scope: resourcegroup
          resourceGroupName: 'rg-sp-mj-nonprod'
          template: ./webapp.limited-workload.bicep
          parameters: 'environment=dev'
          failOnStdErr: false


  deploy_app_dev:
    name: "Deploy Application (Dev)"
    if: (github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    needs:
      - deploy_infra_dev
    environment:
      name: 'Dev'
      url: ${{ steps.deploy-webapp.outputs.webapp-url }}
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: myapp

      - name: Deploy to Azure Web App
        id: deploy-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ needs.deploy_infra_dev.outputs.webAppName }}
          slot-name: 'Production'
          package: .

  deploy_infra_staging:
    name: "Deploy Infrastructure (Staging)"
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    needs: 
      - integrate
    environment:
      name: 'Staging'
    outputs:
      webAppName: ${{ steps.deploy-infrastructure.outputs.webAppName }}
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Download infrastructure artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: infra

      - name: Deploy Bicep file
        id: deploy-infrastructure
        uses: azure/arm-deploy@v1
        with:
          scope: resourcegroup
          resourceGroupName: 'rg-sp-mj-nonprod'
          template: webapp.production-workload.bicep
          parameters: 'environment=staging'
          failOnStdErr: false

  deploy_app_staging:
    name: "Deploy Application (Staging)"
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    needs: 
      - deploy_infra_staging
    environment:
      name: 'Staging'
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: myapp

      - name: Deploy to Azure Web App
        id: deploy-webapp
        uses: azure/webapps-deploy@v2
        with:
          resource-group-name: 'rg-sp-mj-nonprod'
          app-name: ${{ needs.deploy_infra_staging.outputs.webAppName }}
          slot-name: 'Production' # Free/basic tiers only support "production" slot deployment
          package: .

      
