// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SlothParlor.MediaJournal.Data;

#nullable disable

namespace SlothParlor.MediaJournal.Data.Migrations
{
    [DbContext(typeof(MediaJournalDbContext))]
    [Migration("20240404022945_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("MediaJournal")
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SlothParlor.MediaJournal.Data.Models.Entry", b =>
                {
                    b.Property<int>("MediaLogEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MediaLogEntryId"));

                    b.Property<string>("CandidateName")
                        .HasColumnType("text");

                    b.Property<int>("MediaLogId")
                        .HasColumnType("integer");

                    b.HasKey("MediaLogEntryId");

                    b.HasIndex("MediaLogId");

                    b.ToTable("Entries", "MediaJournal");
                });

            modelBuilder.Entity("SlothParlor.MediaJournal.Data.Models.EntryAttendee", b =>
                {
                    b.Property<int>("EntryAttendeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EntryAttendeeId"));

                    b.Property<int>("EntryId")
                        .HasColumnType("integer");

                    b.Property<int>("ParticipantId")
                        .HasColumnType("integer");

                    b.HasKey("EntryAttendeeId");

                    b.HasIndex("EntryId");

                    b.HasIndex("ParticipantId");

                    b.ToTable("EntryAttendees", "MediaJournal");
                });

            modelBuilder.Entity("SlothParlor.MediaJournal.Data.Models.MediaLog", b =>
                {
                    b.Property<int>("MediaLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MediaLogId"));

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<int>("WatchGroupId")
                        .HasColumnType("integer");

                    b.HasKey("MediaLogId");

                    b.HasIndex("WatchGroupId");

                    b.ToTable("MediaLogs", "MediaJournal");
                });

            modelBuilder.Entity("SlothParlor.MediaJournal.Data.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("User", "Users");
                });

            modelBuilder.Entity("SlothParlor.MediaJournal.Data.Models.WatchGroup", b =>
                {
                    b.Property<int>("WatchGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("WatchGroupId"));

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.HasKey("WatchGroupId");

                    b.ToTable("WatchGroups", "MediaJournal");
                });

            modelBuilder.Entity("SlothParlor.MediaJournal.Data.Models.WatchGroupParticipant", b =>
                {
                    b.Property<int>("ParticipantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ParticipantId"));

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WatchGroupId")
                        .HasColumnType("integer");

                    b.HasKey("ParticipantId");

                    b.HasIndex("UserId");

                    b.HasIndex("WatchGroupId");

                    b.ToTable("WatchGroupParticipants", "MediaJournal");
                });

            modelBuilder.Entity("UserWatchGroup", b =>
                {
                    b.Property<string>("OwnersUserId")
                        .HasColumnType("text");

                    b.Property<int>("WatchGroupId")
                        .HasColumnType("integer");

                    b.HasKey("OwnersUserId", "WatchGroupId");

                    b.HasIndex("WatchGroupId");

                    b.ToTable("UserWatchGroup", "MediaJournal");
                });

            modelBuilder.Entity("SlothParlor.MediaJournal.Data.Models.Entry", b =>
                {
                    b.HasOne("SlothParlor.MediaJournal.Data.Models.MediaLog", "MediaLog")
                        .WithMany("LogEntries")
                        .HasForeignKey("MediaLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MediaLog");
                });

            modelBuilder.Entity("SlothParlor.MediaJournal.Data.Models.EntryAttendee", b =>
                {
                    b.HasOne("SlothParlor.MediaJournal.Data.Models.Entry", "Entry")
                        .WithMany("Attendees")
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SlothParlor.MediaJournal.Data.Models.WatchGroupParticipant", "Participant")
                        .WithMany()
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entry");

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("SlothParlor.MediaJournal.Data.Models.MediaLog", b =>
                {
                    b.HasOne("SlothParlor.MediaJournal.Data.Models.WatchGroup", "WatchGroup")
                        .WithMany("MediaLogs")
                        .HasForeignKey("WatchGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WatchGroup");
                });

            modelBuilder.Entity("SlothParlor.MediaJournal.Data.Models.WatchGroupParticipant", b =>
                {
                    b.HasOne("SlothParlor.MediaJournal.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SlothParlor.MediaJournal.Data.Models.WatchGroup", "WatchGroup")
                        .WithMany("Participants")
                        .HasForeignKey("WatchGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("WatchGroup");
                });

            modelBuilder.Entity("UserWatchGroup", b =>
                {
                    b.HasOne("SlothParlor.MediaJournal.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("OwnersUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SlothParlor.MediaJournal.Data.Models.WatchGroup", null)
                        .WithMany()
                        .HasForeignKey("WatchGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SlothParlor.MediaJournal.Data.Models.Entry", b =>
                {
                    b.Navigation("Attendees");
                });

            modelBuilder.Entity("SlothParlor.MediaJournal.Data.Models.MediaLog", b =>
                {
                    b.Navigation("LogEntries");
                });

            modelBuilder.Entity("SlothParlor.MediaJournal.Data.Models.WatchGroup", b =>
                {
                    b.Navigation("MediaLogs");

                    b.Navigation("Participants");
                });
#pragma warning restore 612, 618
        }
    }
}
